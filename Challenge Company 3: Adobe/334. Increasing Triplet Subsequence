// In this question we have used a very good concept here as we know that we want only 3 increasingly elements so what we have done is we have 
made two variables left and mid and then when nums[i]<left then we will initialize it to left and when nums[i]>left and mid > nums[i] so we will 
change mid=nums[i] and in future whenever we will get nums[i]>mid and also nums[i]>left so we have got our Increasingly triplet subsequence.

class Solution {
public:
    bool increasingTriplet(vector<int>& nums) {
        int left=INT_MAX;
        int mid=INT_MAX;
        // int right=INT_MAX;
        int n=nums.size();
        for(int i=0;i<n;i++){
            if(nums[i]<left){
                left=nums[i];
            }
            if(nums[i]>left and mid>nums[i]){
                mid=nums[i];
            }
            if(nums[i]>left and nums[i]>mid){
                // high=nums[i];
                return true;
            }
        }
        return false;
    }
};
