class Solution {
public:
    int evalRPN(vector<string>& tokens) {
        // Going through this question i have an intuition that stack will be used here.
        // What i am thinking of doing here is that inserting all the numbers in the stack and doing all the operation's 
        // on the first two elements of the stack and then inserting their result in the stack.
        // Our result will be the last element on the stack.
        
        int n=tokens.size();
        stack<int> st;
        for(int i=0;i<n;i++){
            if(tokens[i]=="+" or tokens[i]=="-" or tokens[i]=="/" or tokens[i]=="*" and st.size()>=2){
                if(tokens[i]=="+"){
                    int a=st.top();
                    st.pop();
                    int b=st.top();
                    st.pop();
                    st.push(b+a);
                }
                if(tokens[i]=="-"){
                    int a=st.top();
                    st.pop();
                    int b=st.top();
                    st.pop();
                    st.push(b-a);
                }
                if(tokens[i]=="/"){
                    int a=st.top();
                    st.pop();
                    int b=st.top();
                    st.pop();
                    st.push(b/a);
                }
                if(tokens[i]=="*"){
                    int a=st.top();
                    st.pop();
                    int b=st.top();
                    st.pop();
                    st.push(b*a);
                }
            }
            else{
                int temp=stoi(tokens[i]);
                st.push(temp);
            }
        }
        return st.top();
    }
};
